{"basics":{"name":"Siddharth Sule","label":"PhD Student, Particle Physics","image":"","email":"siddharthsule@outlook.com","url":"https://siddharthsule.com","summary":"PhD Student in Particle Physics at the University of Manchester. Working on simulation software for particle collisions at the Large Hadron Collider using Monte Carlo Methods, called Herwig. Specialising in NLL-accurate parton showers and event generation on GPUs using CUDA.","location":{"address":"The University of Manchester, Oxford Rd","postalCode":"M13 9PL","city":"Manchester","countryCode":"GB","region":"England"},"profiles":[{"network":"LinkedIn","username":"siddharthsule","url":"https://www.linkedin.com/in/siddharth-sule/"}]},"education":[{"institution":"The University of Manchester","location":"Manchester, United Kingdom","area":"Particle Physics","studyType":"PhD","startDate":"2022-09-01"},{"institution":"The University of Manchester","location":"Manchester, United Kingdom","area":"Physics","studyType":"MPhys (Hons)","startDate":"2018-09-01","endDate":"2022-06-01","gpa":"First Class Honours","courses":["Quantum Field Theory and the Standard Model","Genereal Relativity and Cosmology","Advanced Statistical Physics","Computational Physics"]}],"publications":[{"name":"An Algorithm to Parallelise Parton Showers on a GPU","publisher":"SciPost Physics Codebases","releaseDate":"2024-03-12","url":"https://arxiv.org/abs/2403.08692","summary":"The Single Instruction, Multiple Thread (SIMT) paradigm of GPU programming does not support the branching nature of a parton shower algorithm by definition. However, modern GPUs are designed to schedule threads with diverging processes independently, allowing them to handle such branches. With regular thread synchronisation and careful treatment of the individual steps, one can simulate a parton shower on a GPU. We present a Sudakov veto algorithm designed to simulate parton branching on multiple events in parallel. We also release a CUDA C++ program that generates matrix elements, showers partons and computes jet rates and event shapes for LEP at 91.2 GeV on a GPU. To benchmark its performance, we also provide a near-identical C++ program designed to simulate events serially on a CPU. While the consequences of branching are not absent, we demonstrate that a GPU can provide the throughput of a many-core CPU. As an example, we show that the time taken to shower 10^6 events on one NVIDIA TESLA V100 GPU is equivalent to that of 295 Intel Xeon E5-2620 CPU cores."}],"skills":[{"name":"Particle Physics, Collider Phenomenology","level":"PhD Level","icon":"fa-solid fa-hashtag","keywords":["Monte Carlo Techniques","Object Oriented Programming","C++, CUDA, Python","Data Analysis","Project Leadership","Communication"]}],"languages":[{"language":"English","fluency":"Fluent","icon":""},{"language":"Hindi","fluency":"Native","icon":""},{"language":"Marathi","fluency":"Native","icon":""}],"interests":[{"name":"Physics","icon":"fa-solid fa-tag","keywords":["Precision QCD Physics","GPUs and Parallel Computing"]}],"references":[{"name":"Professor Michael H. Seymour","icon":"fa-solid fa-laptop","reference":"Famous for generalised NLO-QCD calculations, Parton Showers, Super-Leading Logarithms, and Monte Carlo Event Generators. PhD Supervisor."}]}